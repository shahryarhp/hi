;
;#include <mega8.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;// Alphanumeric LCD functions
;#include <alcd.h>
;#include <stdlib.h>
;char *str;
; int number=0;
; int number2=45;
;int select=0,i=4;
;int j;
;
;
;void init(){
; 0000 000E void init(){

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 000F DDRD=0x02;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 0010   DDRC=0xff;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 0011 UBRRH = 0x33;                      // shift the register right by 8 bits
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0012     UBRRL = 0;                           // set baud rate
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 0013     UCSRB|= (1<<TXEN)|(1<<RXEN);                // enable receiver and transmitter
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0014     UCSRC|= (1<<URSEL)|(1<<UCSZ0)|(1<<UCSZ1);
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0015 }
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;void read(){
; 0000 0016 void read(){
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0017   while((UCSRA & (1<<RXC))==0);
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0018      PORTC=UDR;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0019 
; 0000 001A    }
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;void write(){
; 0000 001B void write(){
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 001C 
; 0000 001D       while((UCSRA & (1<<UDRE))==0);
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 001E        UDR=number2;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 001F   }
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;
; int check2(int a,int b){
; 0000 0021 int check2(int a,int b){
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0022   //PORTC=0XFF;
; 0000 0023   if(a==1){
;PCODE: $00000039 VOL: 0
;	a -> Y+2
;	b -> Y+0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 0024    switch(b){
;PCODE: $0000003D VOL: 0
; 0000 0025      case (1):
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 0026        return 13;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0027        break;
;PCODE: $00000043 VOL: 0
; 0000 0028      case (2):
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0029        return 9;
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 002A        break;
;PCODE: $0000004A VOL: 0
; 0000 002B      case (3):
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 002C        return 8;
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 002D        break;
;PCODE: $00000051 VOL: 0
; 0000 002E      case (4):
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 002F        return 7;
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 0030        break;
;PCODE: $00000058 VOL: 0
; 0000 0031     }
;PCODE: $00000059 VOL: 0
; 0000 0032   }
; 0000 0033   if(a==2){
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 0034    switch(b){
;PCODE: $0000005E VOL: 0
; 0000 0035      case (1):
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 0036        return 10;
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 0037        break;
;PCODE: $00000064 VOL: 0
; 0000 0038      case (2):
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 0039        return 6;
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
; 0000 003A        break;
;PCODE: $0000006B VOL: 0
; 0000 003B      case (3):
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0000 003C        return 5;
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 003D        break;
;PCODE: $00000072 VOL: 0
; 0000 003E      case (4):
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 003F        return 4;
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 0040        break;
;PCODE: $00000079 VOL: 0
; 0000 0041     }
;PCODE: $0000007A VOL: 0
; 0000 0042    }
; 0000 0043     if(a==3){
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 0044      switch(b){
;PCODE: $0000007F VOL: 0
; 0000 0045      case (1):
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 0046        return 11;
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 0047        break;
;PCODE: $00000085 VOL: 0
; 0000 0048      case (2):
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 0049        return 3;
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0000 004A        break;
;PCODE: $0000008C VOL: 0
; 0000 004B      case (3):
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
; 0000 004C        return 2;
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 004D        break;
;PCODE: $00000093 VOL: 0
; 0000 004E      case (4):
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 004F        return 1;
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0000 0050        break;
;PCODE: $0000009A VOL: 0
; 0000 0051     }
;PCODE: $0000009B VOL: 0
; 0000 0052    }
; 0000 0053   if(a==4){
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
; 0000 0054     switch(b){
;PCODE: $000000A0 VOL: 0
; 0000 0055      case (1):
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
; 0000 0056        return 12;
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
; 0000 0057        break;
;PCODE: $000000A6 VOL: 0
; 0000 0058      case (2):
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
; 0000 0059        return 14;
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 005A        break;
;PCODE: $000000AD VOL: 0
; 0000 005B      case (3):
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0000 005C        return 0;
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
; 0000 005D        break;
;PCODE: $000000B4 VOL: 0
; 0000 005E      case (4):
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0000 005F        return 15;
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0000 0060        break;
;PCODE: $000000BB VOL: 0
; 0000 0061     }
;PCODE: $000000BC VOL: 0
; 0000 0062   }
; 0000 0063 
; 0000 0064 }
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;
;    void check(){
; 0000 0066 void check(){
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
; 0000 0067 
; 0000 0068   if( (PINB & (0b00001000))!=0){
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
; 0000 0069     select=1;
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
; 0000 006A    // PORTB=PIND;
; 0000 006B     j=i;
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
; 0000 006C     number=check2(j-3,select);
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
; 0000 006D     //PORTC=number;
; 0000 006E     itoa(number,str);
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
; 0000 006F     lcd_puts(str);
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
; 0000 0070     delay_ms(200);
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
; 0000 0071     /*i++;
; 0000 0072     if(i==8)
; 0000 0073     i=4;
; 0000 0074   PORTD=(1<<i);*/
; 0000 0075     }
; 0000 0076   else if( (PINB & (0b00000100))!=0){
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
; 0000 0077     select=2;
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
; 0000 0078 	//PORTB=PIND;
; 0000 0079 	j=i;
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
; 0000 007A 	number=check2(j-3,select);
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
; 0000 007B 	//PORTC=number;
; 0000 007C    itoa(number,str);
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
; 0000 007D     lcd_puts(str);
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
; 0000 007E 	delay_ms(200);
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
; 0000 007F 	/*i++;
; 0000 0080 	if(i==8)
; 0000 0081     i=4;
; 0000 0082   PORTD=(1<<i);*/
; 0000 0083 	}
; 0000 0084   else if( (PINB & (0b00000010))!=0){
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
; 0000 0085     select=3;
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
; 0000 0086 	//PORTB=PIND;
; 0000 0087 	j=i;
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
; 0000 0088 	number=check2(j-3,select);
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
; 0000 0089 	//PORTC=number;
; 0000 008A     itoa(number,str);
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
; 0000 008B     lcd_puts(str);
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
; 0000 008C 	delay_ms(200);
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
; 0000 008D 	/*i++;
; 0000 008E 	if(i==8)
; 0000 008F     i=4;
; 0000 0090   PORTD=(1<<i);*/
; 0000 0091 	}
; 0000 0092   else if( (PINB & (0b00000001))!=0){
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
; 0000 0093     select=4;
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
; 0000 0094 	//PORTB=PIND;
; 0000 0095 	j=i;
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
; 0000 0096     number=check2(j-3,select);
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
; 0000 0097 	//PORTC=number;
; 0000 0098     itoa(number,str);
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
; 0000 0099     lcd_puts(str);
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
; 0000 009A 	delay_ms(200);
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
; 0000 009B /*	i++;
; 0000 009C 	if(i==8)
; 0000 009D     i=4;
; 0000 009E   PORTD=(1<<i);*/
; 0000 009F 	}
; 0000 00A0   else{
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
; 0000 00A1     i++;
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
; 0000 00A2 	if(i==8)
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
; 0000 00A3     i=4;
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
; 0000 00A4   PORTB=(1<<i);
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
; 0000 00A5   }
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
; 0000 00A6 
; 0000 00A7 
; 0000 00A8   delay_ms(20);
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
; 0000 00A9 }
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;
;
; void main(){
; 0000 00AC void main(){
;PCODE: $00000135 VOL: 0
; 0000 00AD  init();
;PCODE: $00000136 VOL: 0
; 0000 00AE // Alphanumeric LCD initialization
; 0000 00AF // Connections are specified in the
; 0000 00B0 // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 00B1 // RS - PORTD Bit 0
; 0000 00B2 // RD - PORTD Bit 1
; 0000 00B3 // EN - PORTD Bit 2
; 0000 00B4 // D4 - PORTD Bit 4
; 0000 00B5 // D5 - PORTD Bit 5
; 0000 00B6 // D6 - PORTD Bit 6
; 0000 00B7 // D7 - PORTD Bit 7
; 0000 00B8 // Characters/line: 8
; 0000 00B9 
; 0000 00BA lcd_init(16);
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
; 0000 00BB 
; 0000 00BC while (1)
;PCODE: $00000139 VOL: 0
; 0000 00BD       {
; 0000 00BE       // Place your code here
; 0000 00BF          check();
;PCODE: $0000013A VOL: 0
; 0000 00C0            write();
;PCODE: $0000013B VOL: 0
; 0000 00C1         //read();
; 0000 00C2       }
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
; 0000 00C3 
; 0000 00C4 }
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
